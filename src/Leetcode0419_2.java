/**
 * 给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。
 *
 * 说明：
 * 你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？
 */
public class Leetcode0419_2 {
    /**
     * 本题是一个涨姿势的题目
     * 当一个数组中，只有一个数目是单独出现的，其余的都是成对出现的，要找出那个只出现了一次的数，用异或
      交换律：a ^ b ^ c <=> a ^ c ^ b
      任何数于0异或为任何数 0 ^ n => n
      相同的数异或为0: n ^ n => 0
     eg:[2,3,2,4,4]
     2 ^ 3 ^ 2 ^ 4 ^ 4等价于 2 ^ 2 ^ 4 ^ 4 ^ 3 => 0 ^ 0 ^3 => 3
     * @param nums
     * @return
     */
    public int singleNumber(int[] nums) {
        int res =  0 ;
        for (int i = 0; i < nums.length; i++) {
            res ^= nums[i];
        }
        return res;
    }
}
